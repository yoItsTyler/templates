{"version":3,"file":"static/js/598.87f09f33.chunk.js","mappings":"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","sources":["webpack://root-template/./src/components/Consultation/styles.module.css?86e1","service/firebase.js","components/Consultation/Consultation.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"styles_main__H7KYe\"};","import firebase from 'firebase/compat/app';\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/auth';\nimport { getStorage } from 'firebase/storage';\ntry {\n  firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  });\n} catch (error) {\n  if (!/already exists/u.test(error.message)) {\n    console.error('Firebase admin initialization error', error.stack);\n  }\n}\n\nexport const fb = {\n  firestore: firebase.firestore(),\n  auth: firebase.auth(),\n  storage: getStorage()\n \n};","import React, { useState } from \"react\";\nimport { Container, TextField, Button, Grid, Typography } from \"@mui/material\";\nimport { LocalizationProvider, DatePicker } from \"@mui/x-date-pickers\";\nimport { AdapterDateFns } from \"@mui/x-date-pickers/AdapterDateFns\";\nimport { TimePicker } from \"@mui/x-date-pickers/TimePicker\";\nimport styles from './styles.module.css';\nimport keys from '../../images/darkPianoKeys.jpg';\nimport { fb } from \"../../service/firebase\";\nimport { collection, addDoc, serverTimestamp } from \"firebase/firestore\";\nimport { useHistory } from \"react-router-dom/cjs/react-router-dom.min\";\n\nexport const Consultation = () => {\n    const history = useHistory();\n    const [formData, setFormData] = useState({\n        name: \"\",\n        email: \"\",\n        phone: \"\",\n        location: \"\",\n        availability: [{ date: null, time: null }],\n    });\n\n    const [errors, setErrors] = useState({});\n\n    const handleChange = (field, value, index = null) => {\n        if (index !== null) {\n            const updatedAvailability = [...formData.availability];\n            updatedAvailability[index][field] = value;\n            setFormData({ ...formData, availability: updatedAvailability });\n        } else {\n            setFormData({ ...formData, [field]: value });\n        }\n    };\n\n    const handleAddAvailability = () => {\n        setFormData({\n            ...formData,\n            availability: [...formData.availability, { date: null, time: null }],\n        });\n    };\n\n    const handleRemoveAvailability = (index) => {\n        const updatedAvailability = formData.availability.filter((_, i) => i !== index);\n        setFormData({ ...formData, availability: updatedAvailability });\n    };\n\n    const validateForm = () => {\n        const newErrors = {};\n        if (!formData.name) newErrors.name = \"Name is required.\";\n        if (!formData.email || !/\\S+@\\S+\\.\\S+/.test(formData.email))\n            newErrors.email = \"Valid email is required.\";\n        if (!formData.phone || !/^\\d{10}$/.test(formData.phone))\n            newErrors.phone = \"Valid phone number is required.\";\n        if (!formData.location) newErrors.location = \"Location is required.\";\n        setErrors(newErrors);\n        return Object.keys(newErrors).length === 0;\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (validateForm()) {\n            try {\n                const submissionData = {\n                    ...formData,\n                    createTime: serverTimestamp(), // Firebase server-generated timestamp\n                };\n    \n                await addDoc(collection(fb.firestore, \"consultationForms\"), submissionData);\n    \n                console.log(\"Form Data Submitted:\", submissionData);\n                alert(\"Thank you! Sharie will contact you shortly.\");\n                // Reset form\n                setFormData({\n                    name: \"\",\n                    email: \"\",\n                    phone: \"\",\n                    location: \"\",\n                    availability: [{ date: null, time: null }],\n                });\n                history.push('/'); // Redirect to home page after submission\n            } catch (err) {\n                console.error(\"Error submitting form:\", err);\n                alert(\"Failed to submit form. Please try again later.\");\n            }\n        }\n    };\n\n    return (\n        <div className={styles.main} style={{ backgroundImage: 'url(' + keys + ')', backgroundSize: 'cover', backgroundPosition: 'center', width: '100vw' }}>\n            <Container maxWidth=\"sm\" sx={{ mt: 4, p: 2, borderRadius: 2, boxShadow: 2, bgcolor: \"background.paper\" }}>\n                <Typography variant=\"h4\" align=\"center\" gutterBottom>\n                    Schedule a Free Consultation\n                </Typography>\n                <Typography variant=\"body1\" align=\"center\" gutterBottom>\n                    Fill out the form below, and Sharie will reach out to schedule your consultation.\n                </Typography>\n                <form onSubmit={handleSubmit}>\n                    <TextField\n                        fullWidth\n                        label=\"Name\"\n                        margin=\"normal\"\n                        value={formData.name}\n                        onChange={(e) => handleChange(\"name\", e.target.value)}\n                        error={!!errors.name}\n                        helperText={errors.name}\n                    />\n                    <TextField\n                        fullWidth\n                        label=\"Email\"\n                        margin=\"normal\"\n                        value={formData.email}\n                        onChange={(e) => handleChange(\"email\", e.target.value)}\n                        error={!!errors.email}\n                        helperText={errors.email}\n                    />\n                    <TextField\n                        fullWidth\n                        label=\"Phone\"\n                        margin=\"normal\"\n                        value={formData.phone}\n                        onChange={(e) => handleChange(\"phone\", e.target.value)}\n                        error={!!errors.phone}\n                        helperText={errors.phone}\n                    />\n                    <TextField\n                        fullWidth\n                        label=\"Location\"\n                        margin=\"normal\"\n                        value={formData.location}\n                        onChange={(e) => handleChange(\"location\", e.target.value)}\n                        error={!!errors.location}\n                        helperText={errors.location}\n                    />\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <Typography variant=\"h6\" gutterBottom sx={{ mt: 3 }}>\n                            Availability\n                        </Typography>\n                        {formData.availability.map((slot, index) => (\n                            <Grid container spacing={2} key={index} sx={{ mb: 2 }}>\n                                <Grid item xs={6}>\n                                    <DatePicker\n                                        label=\"Date\"\n                                        value={slot.date}\n                                        onChange={(newValue) => handleChange(\"date\", newValue, index)}\n                                        renderInput={(params) => <TextField {...params} />}\n                                    />\n                                </Grid>\n                                <Grid item xs={6}>\n                                    <TimePicker\n                                        label=\"Time\"\n                                        value={slot.time}\n                                        onChange={(newValue) => handleChange(\"time\", newValue, index)}\n                                        renderInput={(params) => <TextField {...params} />}\n                                    />\n                                </Grid>\n                                {index > 0 && (\n                                    <Grid item xs={12}>\n                                        <Button\n                                            fullWidth\n                                            variant=\"outlined\"\n                                            color=\"error\"\n                                            onClick={() => handleRemoveAvailability(index)}\n                                        >\n                                            Remove Slot\n                                        </Button>\n                                    </Grid>\n                                )}\n                            </Grid>\n                        ))}\n                        <Button fullWidth variant=\"outlined\" onClick={handleAddAvailability}\n                            sx={{\n                                borderColor: \"black\",\n                                color: \"black\",\n                                \"&:hover\": {\n                                    borderColor: \"black\",\n                                    backgroundColor: \"rgba(0, 0, 0, 0.04)\", // Optional hover effect\n                                },\n                            }} >\n                            Add Another Slot\n                        </Button>\n                    </LocalizationProvider>\n                    <Button type=\"submit\" fullWidth variant=\"contained\" color=\"primary\" \n                    sx={{ \n                        mt: 3,\nbackgroundColor: \"black\",\n                        \"&:hover\": {\n                            backgroundColor: \"rgba(0, 0, 0, 0.8)\", // Optional hover effect\n                        },\n                     }}>\n                        Submit\n                    </Button>\n                </form>\n            </Container>\n           \n        </div>\n    );\n};\n"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","messagingSenderId","appId","storageBucket","error","test","message","console","stack","fb","firestore","auth","storage","getStorage","Consultation","history","useHistory","formData","setFormData","useState","name","email","phone","location","availability","date","time","errors","setErrors","handleChange","field","value","index","arguments","length","undefined","updatedAvailability","_objectSpread","_jsx","className","styles","style","backgroundImage","keys","backgroundSize","backgroundPosition","width","children","_jsxs","Container","maxWidth","sx","mt","p","borderRadius","boxShadow","bgcolor","Typography","variant","align","gutterBottom","onSubmit","async","e","preventDefault","validateForm","newErrors","Object","submissionData","createTime","serverTimestamp","addDoc","collection","log","alert","push","err","TextField","fullWidth","label","margin","onChange","target","helperText","LocalizationProvider","dateAdapter","AdapterDateFns","map","slot","Grid","container","spacing","mb","item","xs","DatePicker","newValue","renderInput","params","TimePicker","Button","color","onClick","filter","_","i","handleRemoveAvailability","handleAddAvailability","borderColor","backgroundColor","type"],"sourceRoot":""}